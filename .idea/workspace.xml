<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4a74f02a-ab09-42a6-b856-83a926c96b40" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/datastructuresproject/mystackmethods.py" beforeDir="false" afterPath="$PROJECT_DIR$/datastructuresproject/mystackmethods.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/datastructuresproject/test/test_mystackmethods.py" beforeDir="false" afterPath="$PROJECT_DIR$/datastructuresproject/test/test_mystackmethods.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Python Unit Test" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2s6G1zM2e6pp1tBTawmghYpWaJQ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for datastructure.test_myarraymethods.TestMyArrayMethod.executor": "Run",
    "Python tests.Python tests for datastructure.test_myarraymethods.TestMyArrayMethod.test_that_my_array_method_contains_a_specific_element.executor": "Run",
    "Python tests.Python tests for datastructure.test_myarraymethods.TestMyArrayMethod.test_that_my_array_method_does_not_contains_a_specific_element.executor": "Run",
    "Python tests.Python tests for datastructure.test_myqueuemethods.MyQueueMethodTestCase.executor": "Run",
    "Python tests.Python tests for datastructure.test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_add_elements.executor": "Run",
    "Python tests.Python tests for datastructure.test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_do_peek_method.executor": "Run",
    "Python tests.Python tests for datastructure.test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_is_empty.executor": "Run",
    "Python tests.Python tests for datastructure.test_mysetmethods.MySetTestCase.executor": "Run",
    "Python tests.Python tests for datastructure.test_mysetmethods.MySetTestCase.test_that_my_array_method_does_not_contains_a_specific_element.executor": "Run",
    "Python tests.Python tests for datastructure.test_mysetmethods.MySetTestCase.test_that_my_set_method_contains_a_specific_element.executor": "Run",
    "Python tests.Python tests for datastructures.test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_do_peek_method.executor": "Run",
    "Python tests.Python tests for test_myarraymethods.TestMyArrayMethod.executor": "Run",
    "Python tests.Python tests for test_myarraymethods.TestMyArrayMethod.test_that_my_array_method_can_clear_all_elements_in_array_and_return_true_for_is_empty.executor": "Run",
    "Python tests.Python tests for test_myarraymethods.TestMyArrayMethod.test_that_my_array_method_can_count_the_number_of_occurrence_of_an_element.executor": "Run",
    "Python tests.Python tests for test_myarraymethods.TestMyArrayMethod.test_that_my_array_method_can_remove_element_and_return_true_if_is_empty.executor": "Run",
    "Python tests.Python tests for test_myarraymethods.TestMyArrayMethod.test_that_my_array_method_can_remove_element_at_a_particular_index_and_return_size.executor": "Run",
    "Python tests.Python tests for test_myqueuemethods.MyQueueMethodTest.executor": "Run",
    "Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase.executor": "Run",
    "Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_remove_elements_dequeue_method.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_method_can_clear_all_items_in_set.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_method_can_get_index_of_an_element.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_methods_can_add_items.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_methods_can_be_return_length_of_my_set.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_methods_can_insert_element_at_a_particular_index.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_methods_can_remove_elements_and_return_size.executor": "Run",
    "Python tests.Python tests for test_mysetmethods.MySetTestCase.test_that_my_set_methods_exist.executor": "Run",
    "Python tests.Python tests in test_myarraymethods.py.executor": "Run",
    "Python tests.Python tests in test_myqueuemethods.py.executor": "Run",
    "Python tests.Python tests in test_mysetmethods.py.executor": "Run",
    "Python.mysetmethods.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\DELL\Documents\pythonClass\datastructuresproject\test" />
      <recent name="C:\Users\DELL\Documents\pythonClass\datastructuresproject" />
      <recent name="C:\Users\DELL\Documents\pythonClass\datastructures\datastructures" />
      <recent name="C:\Users\DELL\Documents\pythonClass\datastructures" />
      <recent name="C:\Users\DELL\Documents\pythonClass\datastructures\test\datastructures" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase">
    <configuration name="Python tests for test_myqueuemethods.MyQueueMethodTestCase" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pythonClass" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/datastructuresproject/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myqueuemethods.MyQueueMethodTestCase&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_add_elements" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pythonClass" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/datastructuresproject/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_add_elements&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_do_peek_method" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pythonClass" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/datastructuresproject/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_do_peek_method&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_remove_elements_dequeue_method" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pythonClass" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/datastructuresproject/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_remove_elements_dequeue_method&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_is_empty" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pythonClass" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/datastructuresproject/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_is_empty&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase" />
        <item itemvalue="Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_remove_elements_dequeue_method" />
        <item itemvalue="Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_do_peek_method" />
        <item itemvalue="Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_can_add_elements" />
        <item itemvalue="Python tests.Python tests for test_myqueuemethods.MyQueueMethodTestCase.test_that_my_queue_is_empty" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-PY-243.22562.220" />
        <option value="bundled-python-sdk-0fc6c617c4bd-9a18a617cbe4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.22562.220" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4a74f02a-ab09-42a6-b856-83a926c96b40" name="Changes" comment="" />
      <created>1737768400002</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1737768400002</updated>
      <workItem from="1737768401029" duration="6486000" />
      <workItem from="1737870360930" duration="5579000" />
      <workItem from="1737905286934" duration="410000" />
      <workItem from="1737918226372" duration="1882000" />
      <workItem from="1738026789476" duration="4224000" />
      <workItem from="1738051283589" duration="957000" />
      <workItem from="1738092109340" duration="7114000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/pythonClass$.coverage" NAME=" Coverage Results" MODIFIED="1738118384375" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/datastructuresproject/test" />
    <SUITE FILE_PATH="coverage/pythonClass$mysetmethods.coverage" NAME="mysetmethods Coverage Results" MODIFIED="1738116008879" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/datastructuresproject" />
  </component>
</project>